import pandas as pd
from sklearn.datasets import load_iris
from sklearn.ensemble import RandomForestClassifier
import pickle
import os

# ✅ Create 'model' directory if it doesn't exist
os.makedirs("model", exist_ok=True)

# Load dataset
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = iris.target

# Train model
model = RandomForestClassifier()
model.fit(X, y)

# Save model
with open("model/iris_model.pkl", "wb") as f:
    pickle.dump(model, f)

print("✅ Model trained and saved to 'model/iris_model.pkl'")

# app.py

from flask import Flask, request, jsonify, render_template
import pickle
import numpy as np

app = Flask(__name__)

# Load model
with open("model/iris_model.pkl", "rb") as f:
    model = pickle.load(f)

@app.route('/')
def home():
    return render_template("index.html")  # Optional web UI

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.get_json()
        features = [data['sepal_length'], data['sepal_width'],
                    data['petal_length'], data['petal_width']]
        prediction = model.predict([features])[0]
        return jsonify({
            "prediction": int(prediction)
        })
    except Exception as e:
        return jsonify({"error": str(e)})

if __name__ == '__main__':
    app.run(debug=True)
